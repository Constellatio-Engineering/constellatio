{
  "parserOptions": {
    "project": "./tsconfig.json"
  },
  "extends": ["@dualmeta/eslint-config-next", "plugin:storybook/recommended"],
  "ignorePatterns": [
    "src/services/graphql/__generated/*",
    "src/lib/database.types.ts"
  ],
  "rules": {
    "no-use-before-define": ["error", { "variables": false }],
    "no-console": "off",
    "prefer-arrow/prefer-arrow-functions": "off",
    "@typescript-eslint/consistent-type-definitions": "off",
    "@typescript-eslint/no-explicit-any": "error",
    "no-nested-ternary": "off",
    "@typescript-eslint/array-type": [
      "error",
      {
        "default": "array-simple"
      }
    ],
    "import/no-unresolved": [
      "error",
      {
        "ignore": ["drizzle-orm/postgres", "drizzle-orm/pg-core"]
      }
    ],
    "react/no-unknown-property": [
      "error",
      {
        "ignore": ["css", "global", "jsx"]
      }
    ],
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "format": ["camelCase", "PascalCase"],
        "leadingUnderscore": "allow",
        "filter": {
          "regex": "^f_|^q_",
          "match": false
        },
        "selector": [
          "variable",
          "parameter",
          "classProperty",
          "typeProperty"
        ]
      },
      {
        "format": ["PascalCase"],
        "leadingUnderscore": "allow",
        "prefix": [
          "is",
          "should",
          "has",
          "can",
          "was",
          "were",
          "have",
          "do",
          "must",
          "does",
          "would",
          "did",
          "will",
          "may",
          "could",
          "might",
          "cant",
          "wont",
          "are"
        ],
        "selector": [
          "variable",
          "parameter",
          "classProperty",
          "typeProperty"
        ],
        "types": ["boolean"]
      },
      {
        "custom": {
          "match": true,
          "regex": "^e[A-Z]"
        },
        "format": ["strictCamelCase"],
        "selector": "enum"
      },
      {
        "format": ["strictCamelCase"],
        "selector": "enumMember"
      }
    ]
  },
  "overrides": [
    {
      "files": ["src/schemas/**/*"],
      "rules": {
        "import/no-unused-modules": "off"
      }
    },
    {
      "files": ["**/pages/**/*", "src/services/graphql/**/*", "*.stories.tsx"],
      "rules": {
        "import/no-unused-modules": "off"
      }
    },
    {
      "files": ["**/pages/**/*", "src/services/graphql/**/*", "*.stories.tsx"],
      "rules": {
        "react/no-multi-comp": "off"
      }
    },
    {
      "files": ["src/components/Icons/**/*"],
      "rules": {
        "import/no-unused-modules": "off",
        "react/no-multi-comp": "off"
      }
    },
    {
      "files": ["src/db/schema.ts"],
      "rules": {
        "import/no-unused-modules": "off"
      }
    }
  ]
}
