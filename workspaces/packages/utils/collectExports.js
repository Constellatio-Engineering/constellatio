import * as fs from 'fs';
import * as path from 'path';

const srcDir = 'src';
const utilsDir = "utils";
const schemaPattern = /\.utils\.ts$/;
const indexFile = path.join(srcDir,'exports.ts');

function findSchemaFiles(dir) {
  const results = [];

  const files = fs.readdirSync(dir);

  for (const file of files) {
    const fullPath = path.join(dir, file);
    const stat = fs.statSync(fullPath);

    if (stat.isDirectory()) {
      results.push(...findSchemaFiles(fullPath));
    } else if (schemaPattern.test(file)) {
      // Convert Windows paths to forward slashes if necessary
      const relativePath = path.relative(srcDir, fullPath)
        .replace(/\\/g, '/');

      // Remove the .ts extension
      const importPath = './' + relativePath.replace(/\.ts$/, '');
      results.push(importPath);
    }
  }

  return results;
}

function generateIndex() {
  const schemaFiles = findSchemaFiles(`${srcDir}/${utilsDir}`);

  const exports = schemaFiles
    .sort()
    .map(file => `export * from "${file}";`)
    .join('\n');

  const warning = "/* ==================== CAUTION: This file is automatically generated. Do not edit. ==================== */\n\n";

  fs.writeFileSync(indexFile, warning + exports + '\n');

  console.log(`Generated ${schemaFiles.length} exports in ${indexFile}`);
}

// Run the script
generateIndex();